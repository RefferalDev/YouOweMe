type Mutation {
  newOwe(data: NewOweInputType!): Owe!
}

input NewOweInputType {
  title: String!
  amount: Float!
  issuedToID: String
  # The mobile number has to be of type string and in such a format `+919594128425`
  mobileNo: String
}

type Owe {
  id: ID!
  title: String!
  amount: Float!
  issuedBy: User!
  issuedTo: User!
  created: Timestamp!
}

type Query {
  # Get all the users from the database.
  getUsers: [User!]!
  getUser(id: String!): User
  getOwes: [Owe!]!
  Me: User!
}

type Subscription {
  Me: User!
  User(id: String!): User!
}

# The javascript `Date` as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
scalar Timestamp

type User {
  id: ID!
  name: String!
  image: String
  mobileNo: String!
  oweMe: [Owe!]!
  oweMeAmount: Int!
  iOwe: [Owe!]!
  iOweAmount: Int!
  created: Timestamp!
}

